name: Auto-Deploy FastAPI Backend to Hostinger

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y python3-dev build-essential pkg-config libffi-dev \
            libssl-dev libjpeg-dev zlib1g-dev
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
        
    - name: Create production deployment files
      run: |
        mkdir -p deploy_files
        
        # Create production startup script
        cat > deploy_files/start_production.py << 'EOF'
        #!/usr/bin/env python3.12
        """
        Production startup script for Legatoo FastAPI Backend
        """
        import os
        import sys
        import uvicorn
        from pathlib import Path
        
        # Add the project root to Python path
        project_root = Path(__file__).parent
        sys.path.insert(0, str(project_root))
        
        # Add user site-packages to Python path for user-installed packages
        import site
        user_site = site.getusersitepackages()
        if user_site not in sys.path:
            sys.path.insert(0, user_site)
        
        # Set production environment variables
        os.environ.setdefault('ENVIRONMENT', 'production')
        os.environ.setdefault('LOG_LEVEL', 'INFO')
        
        if __name__ == "__main__":
            print("üöÄ Starting Legatoo FastAPI Backend - Production Mode")
            print("üìã Deploying actual FastAPI backend with all endpoints")
            print("üîÑ Deployment triggered by: GitHub Actions Push")
            print("üåê API Documentation: https://legatoo.westlinktowing.com/api/docs")
            print("üìä Swagger UI: https://legatoo.westlinktowing.com/api/swagger.html")
            
            # Start the FastAPI application
            uvicorn.run(
                "app.main:app",
                host="0.0.0.0",
                port=8000,
                reload=False,
                workers=1,
                log_level="info"
            )
        EOF
        
        # Create production deployment script
        cat > deploy_files/deploy_production.sh << 'EOF'
        #!/bin/bash
        echo "üöÄ Starting Production FastAPI Backend Deployment..."
        echo "üìÖ Deployment Time: $(date)"
        echo "üîÑ Triggered by: Push to Repository"
        
        cd /home/$USER/legatoo_backend
        
        # Stop old processes
        echo "üõë Stopping old backend processes..."
        pkill -f "start_production.py" || true
        pkill -f "exact_routes_backend.py" || true
        pkill -f "deploy_backend.py" || true
        pkill -f "run_fastapi.py" || true
        pkill -f "uvicorn" || true
        
        # Check available Python versions and use the best one
        echo "üêç Checking available Python versions..."
        PYTHON_BIN=""
        
        # Try different Python versions in order of preference
        for version in python3.12 python3.11 python3.10 python3.9 python3.8 python3; do
            if command -v $version &> /dev/null; then
                PYTHON_BIN=$version
                echo "‚úÖ Found Python: $version"
                break
            fi
        done
        
        if [ -z "$PYTHON_BIN" ]; then
            echo "‚ùå No Python installation found!"
            exit 1
        fi
        
        # Check Python version
        echo "üêç Using Python: $PYTHON_BIN"
        $PYTHON_BIN --version
        
        # Install Python dependencies
        echo "üì¶ Installing Python dependencies..."
        $PYTHON_BIN -m pip install --upgrade pip setuptools wheel
        $PYTHON_BIN -m pip install --user -r requirements.txt
        
        # Verify installation
        echo "‚úÖ Verifying installation..."
        $PYTHON_BIN -c "import fastapi, uvicorn, sqlalchemy, aiofiles; print('All dependencies installed successfully!')"
        
        # Create database if it doesn't exist
        echo "üóÑÔ∏è Initializing database..."
        $PYTHON_BIN -c "
        import asyncio
        from app.db.database import create_tables
        asyncio.run(create_tables())
        print('Database tables created successfully!')
        "
        
        # Start production backend
        echo "‚ñ∂Ô∏è Starting production FastAPI backend..."
        nohup $PYTHON_BIN start_production.py > production.log 2>&1 &
        
        # Wait for startup
        sleep 5
        
        # Test backend health
        echo "üß™ Testing backend health..."
        if curl -s http://localhost:8000/health > /dev/null; then
            echo "‚úÖ FastAPI Backend deployed successfully!"
            echo "üåê API: https://legatoo.westlinktowing.com/api"
            echo "üìö Swagger UI: https://legatoo.westlinktowing.com/api/swagger.html"
            echo "üìñ API Docs: https://legatoo.westlinktowing.com/api/docs"
            echo "üîê Auth Endpoints: https://legatoo.westlinktowing.com/api/v1/auth/"
        else
            echo "‚ùå Backend health check failed"
            echo "üìã Checking logs..."
            tail -20 production.log
            exit 1
        fi
        EOF
        chmod +x deploy_files/deploy_production.sh

    - name: Upload files to Hostinger
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOSTINGER_HOST }}
        username: ${{ secrets.HOSTINGER_USERNAME }}
        password: ${{ secrets.HOSTINGER_PASSWORD }}
        port: ${{ secrets.HOSTINGER_PORT }}
        source: "deploy_files/*"
        target: "/home/${{ secrets.HOSTINGER_USERNAME }}/legatoo_backend/"
        strip_components: 1

    - name: Execute production deployment
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOSTINGER_HOST }}
        username: ${{ secrets.HOSTINGER_USERNAME }}
        password: ${{ secrets.HOSTINGER_PASSWORD }}
        port: ${{ secrets.HOSTINGER_PORT }}
        timeout: 60s
        command_timeout: 60s
        script: |
          cd /home/${{ secrets.HOSTINGER_USERNAME }}/legatoo_backend
          chmod +x deploy_production.sh
          ./deploy_production.sh