name: Auto-Deploy FastAPI Backend to Hostinger

on:
push:
branches: [ main, master, develop ]
pull_request:
branches: [ main, master ]

jobs:
deploy:
runs-on: ubuntu-latest

```
steps:
- name: Checkout code
  uses: actions/checkout@v4

- name: Set up Python
  uses: actions/setup-python@v4
  with:
    python-version: '3.11' # ÿ™ÿ£ŸÉÿØ ÿßŸÑÿ≥Ÿäÿ±ŸÅÿ± ÿπŸÜÿØŸÉ ŸäÿØÿπŸÖ Ÿáÿ∞ÿß ÿßŸÑÿ•ÿµÿØÿßÿ±

- name: Install system dependencies
  run: |
    sudo apt-get update -y
    sudo apt-get install -y python3-dev build-essential pkg-config libffi-dev \
        libssl-dev libjpeg-dev zlib1g-dev

- name: Install Python dependencies
  run: |
    python -m pip install --upgrade pip setuptools wheel
    pip install -r requirements.txt

- name: Prepare deployment files
  run: |
    mkdir -p deploy_files

    # Startup script
    cat > deploy_files/start_production.py << 'EOF'
    #!/usr/bin/env python3
    import os, sys
    from pathlib import Path
    import uvicorn, site

    project_root = Path(__file__).parent.parent
    sys.path.insert(0, str(project_root))

    user_site = site.getusersitepackages()
    if user_site not in sys.path:
        sys.path.insert(0, user_site)

    os.environ.setdefault('ENVIRONMENT', 'production')
    os.environ.setdefault('LOG_LEVEL', 'INFO')

    if __name__ == "__main__":
        print("üöÄ Starting FastAPI Backend")
        uvicorn.run(
            "app.main:app",
            host="0.0.0.0",
            port=8000,
            reload=False,
            workers=2,
            log_level="info"
        )
    EOF

    # Deployment script
    cat > deploy_files/deploy_production.sh << 'EOF'
    #!/bin/bash
    echo "üöÄ Starting Backend Deployment..."
    cd /home/$USER/legatoo_backend

    # Kill old processes
    pkill -f "start_production.py" || true
    pkill -f "uvicorn" || true

    # Detect Python
    PYTHON_BIN=$(command -v python3.11 || command -v python3.10 || command -v python3)
    echo "üêç Using Python: $PYTHON_BIN"

    # Backend setup
    echo "üì¶ Installing Python dependencies..."
    $PYTHON_BIN -m pip install --user -r requirements.txt

    echo "üóÑÔ∏è Initializing database..."
    $PYTHON_BIN -c "import asyncio; from app.db.database import create_tables; asyncio.run(create_tables())"

    echo "‚ñ∂Ô∏è Starting FastAPI backend..."
    nohup $PYTHON_BIN ./deploy_files/start_production.py > backend.log 2>&1 &

    sleep 5

    echo "üß™ Checking backend health..."
    if curl -s http://localhost:8000/health > /dev/null; then
        echo "‚úÖ Backend OK"
    else
        echo "‚ùå Backend failed"
        tail -20 backend.log
        exit 1
    fi

    echo "‚úÖ Deployment finished"
    EOF
    chmod +x deploy_files/deploy_production.sh

- name: Upload backend project to Hostinger
  uses: appleboy/scp-action@v0.1.4
  with:
    host: ${{ secrets.HOSTINGER_HOST }}
    username: ${{ secrets.HOSTINGER_USERNAME }}
    password: ${{ secrets.HOSTINGER_PASSWORD }}
    port: ${{ secrets.HOSTINGER_PORT }}
    source: "./*"
    target: "/home/${{ secrets.HOSTINGER_USERNAME }}/legatoo_backend/"
    strip_components: 0

- name: Execute deployment script on Hostinger
  uses: appleboy/ssh-action@v1.0.0
  with:
    host: ${{ secrets.HOSTINGER_HOST }}
    username: ${{ secrets.HOSTINGER_USERNAME }}
    password: ${{ secrets.HOSTINGER_PASSWORD }}
    port: ${{ secrets.HOSTINGER_PORT }}
    timeout: 120s
    script: |
      cd /home/${{ secrets.HOSTINGER_USERNAME }}/legatoo_backend
      chmod +x deploy_files/deploy_production.sh
      ./deploy_production.sh
```
