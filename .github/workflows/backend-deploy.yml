name: FastAPI Backend Deployment to Hostinger

on:
  push:
    branches: [ main, master, develop ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y python3-dev build-essential pkg-config libffi-dev \
            libssl-dev libjpeg-dev zlib1g-dev curl
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -r requirements.txt
        
    - name: Generate deployment files
      run: |
        mkdir -p deploy_files
        
        # Create production startup script
        cat > deploy_files/start_production.py << 'EOF'
        #!/usr/bin/env python3.11
        """
        Production startup script for FastAPI Backend
        """
        import os
        import sys
        import uvicorn
        from pathlib import Path
        
        # Add the project root to Python path
        project_root = Path(__file__).parent
        sys.path.insert(0, str(project_root))
        
        # Set production environment variables
        os.environ.setdefault('ENVIRONMENT', 'production')
        os.environ.setdefault('LOG_LEVEL', 'INFO')
        
        if __name__ == "__main__":
            print("🚀 Starting FastAPI Backend - Production Mode")
            print("🌐 Server: 0.0.0.0:8000")
            print("📊 Environment: Production")
            
            # Start the FastAPI application
            uvicorn.run(
                "app.main:app",
                host="0.0.0.0",
                port=8000,
                reload=False,
                workers=1,
                log_level="info"
            )
        EOF
        
        # Create production deployment script
        cat > deploy_files/deploy_production.sh << 'EOF'
        #!/bin/bash
        set -e
        
        echo "🚀 Starting FastAPI Backend Production Deployment..."
        echo "📅 Deployment Time: $(date)"
        
        cd /home/$USER/legatoo_backend
        
        # Stop old processes
        echo "🛑 Stopping old backend processes..."
        pkill -f "start_production.py" || true
        pkill -f "uvicorn" || true
        sleep 2
        
        # Install Python 3.12
        echo "🐍 Installing Python 3.12..."
        
        # Update apt repositories
        echo "📦 Updating apt repositories..."
        sudo apt-get update -y
        
        # Install software-properties-common
        echo "🔧 Installing software-properties-common..."
        sudo apt-get install -y software-properties-common
        
        # Add deadsnakes PPA for Python 3.12
        echo "➕ Adding deadsnakes PPA..."
        sudo add-apt-repository ppa:deadsnakes/ppa -y
        
        # Update repositories again after adding PPA
        sudo apt-get update -y
        
        # Install Python 3.12 and required packages
        echo "📥 Installing Python 3.12, python3.12-venv, and python3.12-dev..."
        sudo apt-get install -y python3.12 python3.12-venv python3.12-dev
        
        # Set Python binary to use 3.12
        PYTHON_BIN="python3.12"
        echo "✅ Python 3.12 installation completed!"
        $PYTHON_BIN --version
        
        # Install Python dependencies
        echo "📦 Installing Python dependencies..."
        $PYTHON_BIN -m pip install --upgrade pip setuptools wheel
        $PYTHON_BIN -m pip install --user -r requirements.txt
        
        # Verify critical dependencies
        echo "✅ Verifying dependencies..."
        $PYTHON_BIN -c "import fastapi, uvicorn, sqlalchemy, aiofiles; print('All dependencies verified successfully!')"
        
        # Run database migrations
        echo "🗄️ Running database migrations..."
        $PYTHON_BIN -c "
        import asyncio
        from app.db.database import create_tables
        asyncio.run(create_tables())
        print('Database tables created/updated successfully!')
        "
        
        # Start production backend
        echo "▶️ Starting FastAPI backend in production mode..."
        nohup $PYTHON_BIN start_production.py > production.log 2>&1 &
        BACKEND_PID=$!
        
        # Wait for startup
        echo "⏳ Waiting for backend to start..."
        sleep 10
        
        # Check if process is still running
        if ! kill -0 $BACKEND_PID 2>/dev/null; then
            echo "❌ Backend process died during startup"
            echo "📋 Checking logs..."
            tail -20 production.log
            exit 1
        fi
        
        echo "✅ FastAPI Backend deployed successfully!"
        echo "🌐 API Documentation: https://yourdomain.com/api/docs"
        echo "🔐 Health Check: https://yourdomain.com/api/health"
        echo "📊 Process ID: $BACKEND_PID"
        EOF
        
        chmod +x deploy_files/start_production.py
        chmod +x deploy_files/deploy_production.sh

    - name: Upload backend project to Hostinger
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.HOSTINGER_HOST }}
        username: ${{ secrets.HOSTINGER_USERNAME }}
        password: ${{ secrets.HOSTINGER_PASSWORD }}
        port: ${{ secrets.HOSTINGER_PORT }}
        source: "."
        target: "/home/${{ secrets.HOSTINGER_USERNAME }}/legatoo_backend/"
        strip_components: 0

    - name: Execute production deployment
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOSTINGER_HOST }}
        username: ${{ secrets.HOSTINGER_USERNAME }}
        password: ${{ secrets.HOSTINGER_PASSWORD }}
        port: ${{ secrets.HOSTINGER_PORT }}
        timeout: 120s
        command_timeout: 120s
        script: |
          cd /home/${{ secrets.HOSTINGER_USERNAME }}/legatoo_backend
          chmod +x deploy_files/deploy_production.sh
          ./deploy_files/deploy_production.sh

    - name: Health check
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOSTINGER_HOST }}
        username: ${{ secrets.HOSTINGER_USERNAME }}
        password: ${{ secrets.HOSTINGER_PASSWORD }}
        port: ${{ secrets.HOSTINGER_PORT }}
        timeout: 30s
        command_timeout: 30s
        script: |
          echo "🧪 Performing health check..."
          
          # Wait a bit more for full startup
          sleep 5
          
          # Check if backend is responding
          if curl -s -f http://localhost:8000/health > /dev/null; then
            echo "✅ Health check passed! Backend is running correctly."
            echo "🌐 Backend is accessible at: http://localhost:8000"
            echo "📊 API Documentation: http://localhost:8000/docs"
            echo "🔐 Health endpoint: http://localhost:8000/health"
            
            # Show process info
            echo "📋 Backend process information:"
            ps aux | grep -E "(start_production|uvicorn)" | grep -v grep || echo "No backend processes found"
            
          else
            echo "❌ Health check failed!"
            echo "📋 Checking backend logs..."
            cd /home/${{ secrets.HOSTINGER_USERNAME }}/legatoo_backend
            if [ -f production.log ]; then
              echo "--- Recent logs ---"
              tail -30 production.log
            else
              echo "No production.log found"
            fi
            
            echo "📋 Checking process status..."
            ps aux | grep -E "(start_production|uvicorn)" | grep -v grep || echo "No backend processes running"
            
            exit 1
          fi
